#!/sbin/openrc-run

supervisor="supervise-daemon"

name="Ghidra Server"
description="Ghidra Server"

# generate all required JVM args to start the Ghidra server
__gen_jvm_args() {
	# These ones are needed
	local server_java_args="-Djava=${JAVA} -Dghidra_home=${GHIDRA_HOME} -Dclasspath_frag=${GHIDRA_HOME}/Ghidra/Features/GhidraServer/data/classpath.frag -Dos_dir=${GHIDRA_HOME}/Ghidra/Features/GhidraServer/os/linux64"

	# These classpath entries were extracted from Ghidra 10.0.4
	# Update from Ghidra/Features/GhidraServer/Data/classpath.frag if required
	local classpath=(
		${GHIDRA_HOME}/Ghidra/Features/GhidraServer/lib/GhidraServer.jar
		${GHIDRA_HOME}/Ghidra/Framework/FileSystem/lib/FileSystem.jar
		${GHIDRA_HOME}/Ghidra/Framework/DB/lib/DB.jar
		${GHIDRA_HOME}/Ghidra/Framework/Docking/lib/Docking.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/Generic.jar
		${GHIDRA_HOME}/Ghidra/Framework/FileSystem/lib/ganymed-ssh2-262.jar
		${GHIDRA_HOME}/Ghidra/Framework/Utility/lib/Utility.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/cglib-nodep-2.2.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/guava-19.0.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/jdom-legacy-1.1.3.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/log4j-core-2.12.1.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/log4j-api-2.12.1.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/commons-collections4-4.1.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/commons-lang3-3.9.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/commons-text-1.6.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/commons-io-2.6.jar
		${GHIDRA_HOME}/Ghidra/Framework/Generic/lib/gson-2.8.6.jar
		${GHIDRA_HOME}/Ghidra/Framework/Docking/lib/timingframework-1.0.jar
		${GHIDRA_HOME}/Ghidra/Framework/Docking/lib/javahelp-2.0.05.jar
	);

	local classpath_arg="-cp "

	for i in $(seq 0 $((${#classpath[*]} - 1))); do
		if [ "$i" == "$((${#classpath[*]} - 1))" ]; then
			classpath_arg="${classpath_arg}${classpath[$i]}";
		else
			classpath_arg="${classpath_arg}${classpath[$i]}:";
		fi
	done

	echo "${classpath_arg} ${JAVA_ARGS} ${server_java_args} ghidra.server.remote.GhidraServer ${GHIDRA_ARGS}";
}

command="$JAVA"
command_args="$(__gen_jvm_args)"

supervise_daemon_args="--user $GHIDRA_USER --chdir ${GHIDRA_HOME}"
command_background="yes"

# allow cpuacct
rc_cgroup_cpuacct="y"

rc_cgroup_cleanup="yes"

pidfile="/run/ghidra.pid"

depend() {
        need net
}
